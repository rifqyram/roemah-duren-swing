/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.xyz.roemahduren.presentation.component.input;

import com.xyz.roemahduren.presentation.component.scroll.ScrollBar;

import java.awt.Color;
import javax.swing.*;

/**
 *
 * @author user
 */
public class RoundedTextAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form RoundedTextAreaPanel
     */
    public RoundedTextAreaPanel() {
        initComponents();
        fixScroll();
    }

    public void fixScroll() {
        scrollPaneTextArea.setBorder(null);
        scrollPaneTextArea.setVerticalScrollBar(new ScrollBar());
        scrollPaneTextArea.setHorizontalScrollBar(new ScrollBar());
        scrollPaneTextArea.getHorizontalScrollBar().setBackground(Color.WHITE);
        scrollPaneTextArea.getVerticalScrollBar().setBackground(Color.WHITE);
        scrollPaneTextArea.getViewport().setBackground(Color.WHITE);
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        scrollPaneTextArea.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);

        scrollPaneTextArea.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPaneTextArea.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
    }

    public String getLabelText() {
        return label.getText();
    }

    public void setLabelText(String text) {
        this.label.setText(text);
    }

    public String getLabelErrorText() {
        return errorLabel.getText();
    }

    public void setLabelErrorText(String text) {
        this.errorLabel.setText(text);
    }


    public String getPlaceholder() {
        return textArea.getPlaceholder();
    }

    public void setPlaceholder(String text) {
        this.textArea.setPlaceholder(text);
    }


    public JLabel getErrorLabel() {
        return errorLabel;
    }

    public JLabel getLabel() {
        return label;
    }

    public RoundedTextArea getTextArea() {
        return textArea;
    }

    public String getValue() {
        return textArea.getText();
    }

    public void setValue(String text) {
        this.textArea.setText(text);
    }

    public String getErrorMessage() {
        return this.errorLabel.getText();
    }

    public void setErrorMessage(String text) {
        this.errorLabel.setText(text);
    }

    public void clearErrorMessage() {
        this.errorLabel.setText("");
    }

    public JScrollPane getScrollPaneTextArea() {
        return scrollPaneTextArea;
    }

    public void setScrollPaneTextArea(JScrollPane scrollPaneTextArea) {
        this.scrollPaneTextArea = scrollPaneTextArea;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errorLabel = new JLabel();
        label = new JLabel();
        scrollPaneTextArea = new JScrollPane();
        textArea = new RoundedTextArea();

        errorLabel.setForeground(new Color(220, 53, 69));
        errorLabel.setText("error");

        label.setForeground(new Color(95, 108, 123));
        label.setText("label");

        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.setPlaceholder("");
        scrollPaneTextArea.setViewportView(textArea);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneTextArea)
                    .addComponent(label)
                    .addComponent(errorLabel))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneTextArea, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(errorLabel))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel errorLabel;
    private JLabel label;
    private JScrollPane scrollPaneTextArea;
    private RoundedTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
